from flask import Flask, request
from telegram import Update, Bot
from telegram.ext import Application, CommandHandler, ContextTypes
import os

# üîê –£—Å—Ç–∞–Ω–æ–≤–∏ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Render Dashboard
TOKEN = os.environ.get("7841134339:AAHzS2bPKSEseWYzulezWFYMWKSw_lmU0xs")
WEBHOOK_URL = os.environ.get("t.me/probi439_bot")  # –±–µ–∑ —Å–ª–µ—à–∞ –Ω–∞ –∫–æ–Ω—Ü–µ

bot = Bot(token=TOKEN)
app = Flask(__name__)

# Telegram App
tg_app = Application.builder().token(TOKEN).build()

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ webhook.")

tg_app.add_handler(CommandHandler("start", start))

@app.route('/webhook', methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    tg_app.update_queue.put(update)
    return "ok", 200

@app.route('/')
def home():
    return "–ë–æ—Ç –æ–Ω–ª–∞–π–Ω!"

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ)
    import asyncio
    async def set_webhook():
        await bot.set_webhook(f"{WEBHOOK_URL}/webhook")
    asyncio.run(set_webhook())
    
    app.run(host="0.0.0.0", port=port)
